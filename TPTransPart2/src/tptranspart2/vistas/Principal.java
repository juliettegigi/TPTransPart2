/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tptranspart2.vistas;

import java.awt.Dimension;
import java.awt.Toolkit;

/**
 *
 * @author julie
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        Toolkit miPantalla = Toolkit.getDefaultToolkit();//Asi obtengo la pantalla
        Dimension tamanioPantalla = miPantalla.getScreenSize();//obtengo  la resoluci√≥n de mi pantalla
        int alturaPantalla = tamanioPantalla.height + 400;
        int anchoPantalla = tamanioPantalla.width;
        setSize(anchoPantalla / 2, alturaPantalla / 2);
        setLocation(anchoPantalla / 4, (alturaPantalla / 4)-200);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        MArchivo = new javax.swing.JMenu();
        MISalir = new javax.swing.JMenuItem();
        MMaterias = new javax.swing.JMenu();
        MIFormMateria = new javax.swing.JMenuItem();
        MAlumnos = new javax.swing.JMenu();
        MIFormAlumno = new javax.swing.JMenuItem();
        MInscripciones = new javax.swing.JMenu();
        MIManejoInscripciones = new javax.swing.JMenuItem();
        MCargaNotas = new javax.swing.JMenu();
        MIManipulacionNotas = new javax.swing.JMenuItem();
        MConsulta = new javax.swing.JMenu();
        MIListaAlumXMateria = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 868, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 697, Short.MAX_VALUE)
        );

        MArchivo.setText("Archivo");

        MISalir.setText("Salir");
        MISalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MISalirActionPerformed(evt);
            }
        });
        MArchivo.add(MISalir);

        jMenuBar1.add(MArchivo);

        MMaterias.setText("Materias");

        MIFormMateria.setText("Formulario de materia");
        MIFormMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIFormMateriaActionPerformed(evt);
            }
        });
        MMaterias.add(MIFormMateria);

        jMenuBar1.add(MMaterias);

        MAlumnos.setText("Alumnos");

        MIFormAlumno.setText("Formulario de alumno");
        MIFormAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIFormAlumnoActionPerformed(evt);
            }
        });
        MAlumnos.add(MIFormAlumno);

        jMenuBar1.add(MAlumnos);

        MInscripciones.setText("Inscripciones");

        MIManejoInscripciones.setText("Manejo de inscripciones");
        MIManejoInscripciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIManejoInscripcionesActionPerformed(evt);
            }
        });
        MInscripciones.add(MIManejoInscripciones);

        jMenuBar1.add(MInscripciones);

        MCargaNotas.setText("Carga de notas");

        MIManipulacionNotas.setText("Manipulacion de notas");
        MIManipulacionNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIManipulacionNotasActionPerformed(evt);
            }
        });
        MCargaNotas.add(MIManipulacionNotas);

        jMenuBar1.add(MCargaNotas);

        MConsulta.setText("Consultas");
        MConsulta.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                MConsultaAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        MIListaAlumXMateria.setText("Listado de alumnos por materia");
        MIListaAlumXMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIListaAlumXMateriaActionPerformed(evt);
            }
        });
        MConsulta.add(MIListaAlumXMateria);

        jMenuBar1.add(MConsulta);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(escritorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(escritorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void MIFormAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIFormAlumnoActionPerformed
        escritorio.removeAll(); //si hay una ventana abierta, la limpia,la remueve 
        escritorio.repaint();//dibuja todo de nuevo
        AlumnosView alumnosView = new AlumnosView();
        alumnosView.setVisible(true);
        escritorio.add(alumnosView);
        escritorio.moveToFront(alumnosView);

    }//GEN-LAST:event_MIFormAlumnoActionPerformed

    private void MIFormMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIFormMateriaActionPerformed
        escritorio.removeAll(); //si hay una ventana abierta, la limpia,la remueve 
        escritorio.repaint();//dibuja todo de nuevo
        MateriasView materiasView = new MateriasView();
        materiasView.setVisible(true);
        escritorio.add(materiasView);
        escritorio.moveToFront(materiasView);
    }//GEN-LAST:event_MIFormMateriaActionPerformed

    private void MIManejoInscripcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIManejoInscripcionesActionPerformed
        escritorio.removeAll(); //si hay una ventana abierta, la limpia,la remueve 
        escritorio.repaint();//dibuja todo de nuevo
        ManejoInscripcionesView manejoInscripcionesView = new ManejoInscripcionesView();
        manejoInscripcionesView.setVisible(true);
        escritorio.add(manejoInscripcionesView);
        escritorio.moveToFront(manejoInscripcionesView);
    }//GEN-LAST:event_MIManejoInscripcionesActionPerformed

    private void MIManipulacionNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIManipulacionNotasActionPerformed
        escritorio.removeAll(); //si hay una ventana abierta, la limpia,la remueve 
        escritorio.repaint();//dibuja todo de nuevo
        ManipulacionDeNotasView manipulacionDeNotasView = new ManipulacionDeNotasView();
        manipulacionDeNotasView.setVisible(true);
        escritorio.add(manipulacionDeNotasView);
        escritorio.moveToFront(manipulacionDeNotasView);
    }//GEN-LAST:event_MIManipulacionNotasActionPerformed

    private void MIListaAlumXMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIListaAlumXMateriaActionPerformed
        escritorio.removeAll(); //si hay una ventana abierta, la limpia,la remueve 
        escritorio.repaint();//dibuja todo de nuevo
        ListadoDeAlumnosPorMateriaView listadoDeAlumnosPorMateriaView = new ListadoDeAlumnosPorMateriaView();
        listadoDeAlumnosPorMateriaView.setVisible(true);
        escritorio.add(listadoDeAlumnosPorMateriaView);
        escritorio.moveToFront(listadoDeAlumnosPorMateriaView);
    }//GEN-LAST:event_MIListaAlumXMateriaActionPerformed

    private void MConsultaAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_MConsultaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_MConsultaAncestorMoved

    private void MISalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MISalirActionPerformed
        dispose();
    }//GEN-LAST:event_MISalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MAlumnos;
    private javax.swing.JMenu MArchivo;
    private javax.swing.JMenu MCargaNotas;
    private javax.swing.JMenu MConsulta;
    private javax.swing.JMenuItem MIFormAlumno;
    private javax.swing.JMenuItem MIFormMateria;
    private javax.swing.JMenuItem MIListaAlumXMateria;
    private javax.swing.JMenuItem MIManejoInscripciones;
    private javax.swing.JMenuItem MIManipulacionNotas;
    private javax.swing.JMenuItem MISalir;
    private javax.swing.JMenu MInscripciones;
    private javax.swing.JMenu MMaterias;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
