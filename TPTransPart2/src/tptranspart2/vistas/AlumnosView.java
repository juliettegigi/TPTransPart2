/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tptranspart2.vistas;


import java.sql.Connection;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import tptranspart2.accesoADatos.AlumnoData;
import tptranspart2.accesoADatos.Conexion;
import tptranspart2.entidades.Alumno;

/**
 *
 * @author julie
 */
public class AlumnosView extends javax.swing.JInternalFrame {

    
    /*necesito acceso a la conexi√≥n y usar */
   
    
    public AlumnosView() {
        initComponents();
        btBorrar.setEnabled(false);
        btGuardar.setEnabled(false);
        btActualizar.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtId = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        chActivo = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        btBorrar = new javax.swing.JButton();
        btActualizar = new javax.swing.JButton();
        btLimpiar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtDni = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtApellido = new javax.swing.JTextField();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(512, 480));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel1.setText("ALUMNOS");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("ID: ");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("NOMBRE:");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("FECHA DE NACIMIENTO:");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setText("ACTIVO:");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btGuardar.setText("Guardar");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btBorrar.setText("Borrar");
        btBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBorrarActionPerformed(evt);
            }
        });

        btActualizar.setText("Actualizar");
        btActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActualizarActionPerformed(evt);
            }
        });

        btLimpiar.setText("Limpiar");
        btLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setText("DNI:");

        jtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtDniKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel7.setText("APELLIDO: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel6))))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel4)
                .addGap(9, 9, 9)
                .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel5)
                .addGap(9, 9, 9)
                .addComponent(chActivo))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btGuardar)
                .addGap(26, 26, 26)
                .addComponent(btBorrar)
                .addGap(25, 25, 25)
                .addComponent(btActualizar)
                .addGap(27, 27, 27)
                .addComponent(btLimpiar))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addGap(28, 28, 28)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(chActivo))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btGuardar)
                    .addComponent(btBorrar)
                    .addComponent(btActualizar)
                    .addComponent(btLimpiar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        //  ejecutar el guardar alumno
        
        
        //VALIDO
        ArrayList<String> errores=new ArrayList(); 
        
        String nombre=jtNombre.getText().trim();
        String apellido=jtApellido.getText().trim();
        Date fechaDate=jDateChooser.getDate();
        LocalDate fechaLocalDate=null;
        System.out.println("a verr"+fechaDate);
       
        // fechaLocalDate  tiene este formato: 2023-05-02
        boolean activo=chActivo.isSelected();//me retorna true si est√° activado
        int dni=0;
       
        //VALIDO FECHA
        if(fechaDate==null)
            errores.add("El campo \"fecha de nacimiento\" es obligatorio");
        else
           fechaLocalDate=fechaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        //VALIDO EL NOMBRE   
        if(nombre.length()==0)
            errores.add("El campo nombre es obligatorio");
        else{
           if(!nombre.toLowerCase().matches("[a-z√±√°-√∫√§-√º]+(\\s[a-z√±√°-√∫√§-√º]+)*"))
              errores.add("ha ingresado un car√°cter no v√°lido en el campo nombre");
        }
        
        //VALIDO EL APELLIDO
        if(nombre.length()==0)
            errores.add("El campo apellido es obligatorio");
        else{
           if(!nombre.toLowerCase().matches("[a-z√±√°-√∫√§-√º]+(\\s[a-z√±√°-√∫√§-√º]+)*"))
              errores.add("ha ingresado un car√°cter no v√°lido en el campo apellido");
        }
        
        //VALIDO DNI
        if(jtDni.getText().length()<7 || jtDni.getText().length()>10)
            errores.add("El campo DNI acepta 7-10 d√≠gitos ");
        else{
             try{
                 dni=Integer.parseInt(jtDni.getText());
             }catch(Exception e){
                  errores.add("El campo DNI solo acepta n√∫meros");
              }   
        }
         
        //////////////////////////////////// SI HAY CAMPOS MAL ... MENSAJE DE ERROR
        if(errores.size()!=0){
            String mensaje="";
            for(int i=0; i<errores.size();i++){
                if(i==errores.size()-1)
                    mensaje+=errores.get(i)+", ";
                else  mensaje+=errores.get(i)+".";
            }
          JOptionPane.showMessageDialog(this,mensaje);
          return;
        }
        
        
        
        //SI TODO BIEN GUARDO
        Alumno alumno=new Alumno(dni,nombre,apellido, fechaLocalDate,activo);
        if(AlumnoData.guardarAlumno(alumno)){
            JOptionPane.showMessageDialog(this,"Alumno guardado");
            jtId.setText(alumno.getIdAlumno()+"");
        }
          
        else JOptionPane.showMessageDialog(this,"El alumno no ha podido ser guardado");
       
    }//GEN-LAST:event_btGuardarActionPerformed

    private void btBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBorrarActionPerformed
      if( AlumnoData.darBajaAlumno(Integer.parseInt(jtId.getText())))
              JOptionPane.showMessageDialog(this,"Alumno dado de baja");
      else JOptionPane.showMessageDialog(this,"Baja no realizada");
    }//GEN-LAST:event_btBorrarActionPerformed

    private void btActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActualizarActionPerformed
       if(jtId.getText()!=null){
           int id=Integer.parseInt(jtId.getText());
           String nombre=jtNombre.getText();
           String apellido=jtApellido.getText();
           Date fechaDate=jDateChooser.getDate();
           LocalDate fechaLocalDate=fechaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
           // fechaLocalDate  tiene este formato: 2023-05-02
           boolean activo=chActivo.isSelected();//me retorna true si est√° activado
           int dni=Integer.parseInt(jtDni.getText());
           Alumno alumno=new Alumno(id,dni,nombre,apellido, fechaLocalDate,activo);
           if(AlumnoData.modificarAlumno(alumno))
                JOptionPane.showMessageDialog(this,"Alumno actualizado");
           else JOptionPane.showMessageDialog(this,"El alumno no ha podido ser actualizado");
       }  
    }//GEN-LAST:event_btActualizarActionPerformed

    private void btLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiarActionPerformed
        jtId.setText("");
        jtDni.setText("");
        jtNombre.setText("");
        jtApellido.setText("");
       jDateChooser.setDate(null);
        chActivo.setSelected(false);
        btBorrar.setEnabled(false);
        btActualizar.setEnabled(false);
        
    }//GEN-LAST:event_btLimpiarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        Alumno a=AlumnoData.buscarAlumno(Integer.parseInt(jtId.getText()));
        if(a==null)
            JOptionPane.showMessageDialog(this,"El alumno cuyo id="+jtId.getText()+" no existe en nuestro registro");
        else{
            jtId.setText(a.getIdAlumno()+"");
            jtDni.setText(a.getDni()+"");
            jtNombre.setText(a.getNombre());
            jtApellido.setText(a.getApellido());
            Date date=Date.from(a.getFechaNacimiento().atStartOfDay(ZoneId.systemDefault()).toInstant());
            jDateChooser.setDate(date);
            chActivo.setSelected(a.isEstado());
          // jtFecha.setText(a.getFechaNacimiento().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
           
            btBorrar.setEnabled(true);
            btActualizar.setEnabled(true);
            btGuardar.setEnabled(false);
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDniKeyReleased
        btGuardar.setEnabled(true);
    }//GEN-LAST:event_jtDniKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActualizar;
    private javax.swing.JButton btBorrar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btLimpiar;
    private javax.swing.JCheckBox chActivo;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jtApellido;
    private javax.swing.JTextField jtDni;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables
}
